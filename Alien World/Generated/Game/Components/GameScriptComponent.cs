//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ScriptComponent script { get { return (ScriptComponent)GetComponent(GameComponentsLookup.Script); } }
    public bool hasScript { get { return HasComponent(GameComponentsLookup.Script); } }

    public void AddScript(Alien_World.Script.LuaScript newLuaScript) {
        var index = GameComponentsLookup.Script;
        var component = CreateComponent<ScriptComponent>(index);
        component.LuaScript = newLuaScript;
        AddComponent(index, component);
    }

    public void ReplaceScript(Alien_World.Script.LuaScript newLuaScript) {
        var index = GameComponentsLookup.Script;
        var component = CreateComponent<ScriptComponent>(index);
        component.LuaScript = newLuaScript;
        ReplaceComponent(index, component);
    }

    public void RemoveScript() {
        RemoveComponent(GameComponentsLookup.Script);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherScript;

    public static Entitas.IMatcher<GameEntity> Script {
        get {
            if (_matcherScript == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Script);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherScript = matcher;
            }

            return _matcherScript;
        }
    }
}
